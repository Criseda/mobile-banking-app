services:
  # ======== BACKEND SERVICES ========
  backend:
    container_name: mobile_banking_backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Map host port 8080 to container port 8080
    environment:
      # tells ASP.NET to listen on the correct port inside the container
      - ASPNETCORE_URLS=http://+:8080
      # enable dev mode for development purposes (and swagger)
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - backend-net
    depends_on:
      - app-db # Ensure the database is ready before starting the backend
      - kratos

  app-db:
    image: mariadb:10.11
    container_name: mobile_banking_app_db
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: banking_app
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    volumes:
      - app_db_data:/var/lib/mysql
    networks:
      - backend-net
    restart: unless-stopped

  # ======== FRONTEND SERVICES ========
  frontend:
    container_name: mobile_banking_frontend
    build:
      context: ../frontend/MobileBankingApp
      dockerfile: Dockerfile
    ports:
      - "8081:8081" # Metro Bundler
    volumes:
      # Mount the source code so changes are reflected inside the container (for live reload)
      - ../frontend/MobileBankingApp:/usr/src/app
      # This prevents the container's node_modules from being overwritten by a host node_modules
      - frontend_node_modules:/usr/src/app/node_modules
    networks:
      - backend-net
    depends_on:
      - kratos # Ensure authentication service is up

  # ======== AUTHENTICATION SERVICES ========
  kratos-db:
    image: mariadb:10.11
    container_name: mobile_banking_kratos_db
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: kratos
    volumes:
      - kratos_db_data:/var/lib/mysql
    networks:
      - backend-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-psecret"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - '--sql_mode=NO_ENGINE_SUBSTITUTION'

  kratos:
    image: oryd/kratos:v1.1.0
    container_name: mobile_banking_kratos
    ports:
      - "4433:4433" # Public API
      - "4434:4434" # Admin API
    environment:
      - DSN=mysql://root:secret@tcp(kratos-db:3306)/kratos?parseTime=true&multiStatements=true
      - LOG_LEVEL=debug
    command: serve -c /etc/config/kratos/kratos.yml --dev
    volumes:
      - ./ory/kratos:/etc/config/kratos
    networks:
      - backend-net
    restart: unless-stopped
    depends_on:
      kratos-db:
        condition: service_healthy

networks:
  backend-net:
    driver: bridge

volumes:
  app_db_data:
  kratos_db_data:
  frontend_node_modules: